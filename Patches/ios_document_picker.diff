diff --git a/Backends/System/iOS/Sources/kinc/backend/GLViewController.h b/Backends/System/iOS/Sources/kinc/backend/GLViewController.h
index 4244cc92..4ad70b06 100644
--- a/Backends/System/iOS/Sources/kinc/backend/GLViewController.h
+++ b/Backends/System/iOS/Sources/kinc/backend/GLViewController.h
@@ -6,7 +6,7 @@
 #import <CoreMotion/CMMotionManager.h>
 #endif
 
-@interface GLViewController : UIViewController {
+@interface GLViewController : UIViewController <UIDocumentPickerDelegate, UIDropInteractionDelegate> {
 @private
 }
 
diff --git a/Backends/System/iOS/Sources/kinc/backend/GLViewController.m.h b/Backends/System/iOS/Sources/kinc/backend/GLViewController.m.h
index 0f6f0e38..e31a7592 100644
--- a/Backends/System/iOS/Sources/kinc/backend/GLViewController.m.h
+++ b/Backends/System/iOS/Sources/kinc/backend/GLViewController.m.h
@@ -63,10 +63,68 @@ id getMetalQueue() {
 - (void)loadView {
 	visible = true;
 	self.view = glView = [[GLView alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
+
+	[self.view addInteraction: [[UIDropInteraction alloc] initWithDelegate: self]];
+	[self setNeedsUpdateOfScreenEdgesDeferringSystemGestures];
 }
 
 - (void)setVisible:(BOOL)value {
 	visible = value;
 }
 
+#include <kinc/system.h>
+#include <kinc/input/mouse.h>
+#include <kinc/input/surface.h>
+
+extern char mobile_title[1024];
+
+void importFile(NSURL *url) {
+	NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
+	NSString *folderName = [NSString stringWithUTF8String:mobile_title];
+	NSString *filePath = [[paths objectAtIndex:0] stringByAppendingPathComponent:folderName];
+	if (![[NSFileManager defaultManager] fileExistsAtPath:filePath]) {
+		[[NSFileManager defaultManager] createDirectoryAtPath:filePath withIntermediateDirectories:NO attributes:nil error:nil];
+	}
+	NSString *suggestedName = url.path.lastPathComponent;
+	filePath = [filePath stringByAppendingPathComponent:suggestedName];
+	CFURLRef cfurl = (__bridge CFURLRef)url;
+	CFURLStartAccessingSecurityScopedResource(cfurl);
+	[[NSFileManager defaultManager] copyItemAtPath:url.path toPath:filePath error:nil];
+	CFURLStopAccessingSecurityScopedResource(cfurl);
+	wchar_t *wpath = (wchar_t *)[filePath cStringUsingEncoding:NSUTF32LittleEndianStringEncoding];
+	kinc_internal_drop_files_callback(wpath);
+}
+
+- (void)documentPicker:(UIDocumentPickerViewController *)controller didPickDocumentAtURL:(NSURL *)url {
+	// wchar_t *filePath = (wchar_t *)[url.path cStringUsingEncoding:NSUTF32LittleEndianStringEncoding];
+	// CFURLRef cfurl = (__bridge CFURLRef)url;
+	// CFURLStartAccessingSecurityScopedResource(cfurl);
+	// kinc_internal_drop_files_callback(filePath);
+	// CFURLStopAccessingSecurityScopedResource(cfurl);
+	importFile(url);
+}
+
+- (void)dropInteraction:(UIDropInteraction *)interaction performDrop:(id<UIDropSession>)session {
+	CGPoint point = [session locationInView:self.view];
+	float x = point.x * glView.contentScaleFactor;
+	float y = point.y * glView.contentScaleFactor;
+	kinc_internal_mouse_trigger_move(0, x, y);
+	kinc_internal_surface_trigger_move(0, x, y);
+
+	for (UIDragItem *item in session.items) {
+		[item.itemProvider loadInPlaceFileRepresentationForTypeIdentifier:item.itemProvider.registeredTypeIdentifiers[0] completionHandler:^(NSURL * _Nullable url, BOOL isInPlace, NSError * _Nullable error) {
+			importFile(url);
+		}];
+	}
+}
+
+- (UIDropProposal *)dropInteraction:(UIDropInteraction *)interaction sessionDidUpdate:(id<UIDropSession>)session {
+	return [[UIDropProposal alloc] initWithDropOperation: UIDropOperationCopy];
+}
+
+- (UIRectEdge)preferredScreenEdgesDeferringSystemGestures
+{
+    return UIRectEdgeAll;
+}
+
 @end
diff --git a/Backends/System/iOS/Sources/kinc/backend/ios.plist b/Backends/System/iOS/Sources/kinc/backend/ios.plist
index 4cb77811..6c410ad7 100644
--- a/Backends/System/iOS/Sources/kinc/backend/ios.plist
+++ b/Backends/System/iOS/Sources/kinc/backend/ios.plist
@@ -22,6 +22,10 @@
 	<string>$(BUILD_VERSION)</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true/>
+	<key>LSSupportsOpeningDocumentsInPlace</key>
+	<true/>
+	<key>UIFileSharingEnabled</key>
+	<true/>
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
@@ -36,8 +40,6 @@
 		<string>UIInterfaceOrientationLandscapeLeft</string>
 		<string>UIInterfaceOrientationLandscapeRight</string>
 	</array>
-	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false/>
 	<key>UISupportedInterfaceOrientations~ipad</key>
 	<array>
 		<string>UIInterfaceOrientationPortrait</string>
@@ -45,5 +47,7 @@
 		<string>UIInterfaceOrientationLandscapeLeft</string>
 		<string>UIInterfaceOrientationLandscapeRight</string>
 	</array>
+	<key>UIViewControllerBasedStatusBarAppearance</key>
+	<false/>
 </dict>
 </plist>
